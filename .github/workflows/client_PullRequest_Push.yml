name: Build, Test and Deploy client

on: [push, pull_request]
  
env:
  APPLIKATION_NAME: TheBSGame
  BUILD_DIRECTORY: ./client/build/
  WASM_BUILD_DIRECTORY: ./server/wasm/

  DEPLOY_DIRECTORY: ./deploy
  
defaults:
  run:
    working-directory: ./client/

jobs:
  build-wasm:
    runs-on: ubuntu-latest
    name: Build wasm for client
    steps:
      - name: Cargo Cache
        uses: Swatinem/rust-cache@v1       
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh 
      - name: Build web assembly ${{ env.VERSION }}
        run: wasm-pack build
        working-directory: ${{ env.WASM_BUILD_DIRECTORY }}
      # - name: Publish web assembly ${{ env.VERSION }}
      #   run: wasm-pack publish
      #   working-directory: ${{ env.WASM_BUILD_DIRECTORY }}            
      - uses: actions/upload-artifact@v2
        with:
          name: wasm-pkg
          path: ./server/wasm/pkg

  lint-client:
    runs-on: ubuntu-latest
    needs: build-wasm
    name: Run eslint on client
    steps:
      
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-lint-client-${{ hashFiles('**/package-lock.json') }}
          restore-keys: | 
            ${{ runner.os }}-node-

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm install
      - uses: actions/download-artifact@v2
        with:
          name: wasm-pkg
          path: ./server/wasm/pkg
      - run: npm run lint

  tsc-client:
    runs-on: ubuntu-latest
    name: Check typescript on client
    needs: build-wasm
    steps:
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-tsc-client-${{ hashFiles('**/package-lock.json') }}
          restore-keys: | 
            ${{ runner.os }}-node-

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm install
      - uses: actions/download-artifact@v2
        with:
          name: wasm-pkg
          path: ./server/wasm/pkg
      - run: npm run typescript-check

  test-client:
    runs-on: ubuntu-latest
    name: Run tests on client
    needs: build-wasm
    steps:
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-test-client-${{ hashFiles('**/package-lock.json') }}
          restore-keys: | 
            ${{ runner.os }}-node-

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm install
      - uses: actions/download-artifact@v2
        with:
          name: wasm-pkg
          path: ./server/wasm/pkg
      - run: npm run test

  build-client:
    runs-on: ubuntu-latest
    name: Build client    
    needs: [test-client, lint-client, tsc-client, build-wasm]
    steps:
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-build-client-${{ hashFiles('**/package-lock.json') }}
          restore-keys: | 
            ${{ runner.os }}-node-

      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm install
      - uses: actions/download-artifact@v2
        with:
          name: wasm-pkg
          path: ./server/wasm/pkg
      - run: npm run build

      - name: Upload client build artifact
        uses: actions/upload-artifact@v2
        with:
          name: client_build
          path: ${{ env.BUILD_DIRECTORY }}

  deploy-client:
    runs-on: ubuntu-latest
    name: Deploy client
    needs: [build-client]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download client build artifact
        uses: actions/download-artifact@v2
        with:
          name: client_build
          path: ${{ env.DEPLOY_DIRECTORY }}

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.DEPLOY_DIRECTORY }}
